---
type Props = {
  target: string;
};

const target = Astro.props.target;
---

<div class="grid auto-cols-max grid-flow-col gap-5 text-center text-white">
  <div class="bg-black/80 rounded-md text-neutral-content flex flex-col p-2">
    <span class="countdown font-mono text-5xl">
      <span id="days" aria-live="polite"></span>
    </span>
    days
  </div>
  <div class="bg-black/80 rounded-md text-neutral-content flex flex-col p-2">
    <span class="countdown font-mono text-5xl">
      <span id="hours" aria-live="polite"></span>
    </span>
    hours
  </div>
  <div class="bg-black/80 rounded-md text-neutral-content flex flex-col p-2">
    <span class="countdown font-mono text-5xl">
      <span id="minutes" aria-live="polite"></span>
    </span>
    min
  </div>
  <div class="bg-black/80 rounded-md text-neutral-content flex flex-col p-2">
    <span class="countdown font-mono text-5xl">
      <span id="seconds" aria-live="polite"></span>
    </span>
    sec
  </div>
</div>

<script is:inline define:vars={{ target }}>
  document.addEventListener("DOMContentLoaded", () => {
    const days = document.getElementById("days");
    const hours = document.getElementById("hours");
    const minutes = document.getElementById("minutes");
    const seconds = document.getElementById("seconds");

    const targetTime = new Date(target).getTime();
    const currentTime = new Date().getTime();
    let diff = targetTime - currentTime;

    const updateCountdown = () => {
      const remainingDays = Math.floor(diff / (1000 * 60 * 60 * 24));
      const remainingHours = Math.floor(
        (diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)
      );
      const remainingMinutes = Math.floor(
        (diff % (1000 * 60 * 60)) / (1000 * 60)
      );
      const remainingSeconds = Math.floor((diff % (1000 * 60)) / 1000);

      const updateElement = (element, value) => {
        element.innerText = value;
        element.ariaLabel = value;
      };

      updateElement(days, remainingDays.toString());
      updateElement(
        hours,
        remainingHours < 10
          ? "0" + remainingHours.toString()
          : remainingHours.toString()
      );
      updateElement(
        minutes,
        remainingMinutes < 10
          ? "0" + remainingMinutes.toString()
          : remainingMinutes.toString()
      );
      updateElement(
        seconds,
        remainingSeconds < 10
          ? "0" + remainingSeconds.toString()
          : remainingSeconds.toString()
      );
    };

    const countdownInterval = setInterval(() => {
      updateCountdown();
      diff -= 1000;

      if (diff < 0) {
        clearInterval(countdownInterval);
      }
    }, 1000);
  });
</script>
